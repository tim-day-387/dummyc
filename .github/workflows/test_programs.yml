name: Test Programs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build
    - name: Make Debian Directory
      run: mkdir -p dummyc/DEBIAN
    - name: Make Control File
      run: |
        printf "Package: dummyc\n"  > ./dummyc/DEBIAN/control
        printf "Version: 0.1\n"  >> ./dummyc/DEBIAN/control
        printf "Section: custom\n"  >> ./dummyc/DEBIAN/control
        printf "Priority: optional\n"  >> ./dummyc/DEBIAN/control
        printf "Architecture: all\n"  >> ./dummyc/DEBIAN/control
        printf "Essential: no\n"  >> ./dummyc/DEBIAN/control
        printf "Installed-Size: 1024\n"  >> ./dummyc/DEBIAN/control
        printf "Maintainer: tday141@gmail.com\n"  >> ./dummyc/DEBIAN/control
        printf "Description: Compiler for Minimal Basic (EMCA-55)\n" >> ./dummyc/DEBIAN/control
    - name: Copy Binary to Directory
      run: |
        mkdir -p dummyc/usr/bin
        cp /home/runner/work/dummyc/dummyc/target/debug/dummyc dummyc/usr/bin/dummyc
    - name: Copy Man Page to Directory
      run: |
        mkdir -p dummyc/usr/share/man/man1
        cp /home/runner/work/dummyc/dummyc/docs/dummyc.1.gz dummyc/usr/share/man/man1/dummyc.1.gz
    - name: Build and Install Package
      run: |
        dpkg-deb --build dummyc
        sudo dpkg -i dummyc.deb
    - name: Compile program_1.bas
      run: |
        dummyc /home/runner/work/dummyc/dummyc/examples/program_1.bas
        rustc /tmp/program_1.rs
    - name: Run Program
      run: ./program_1 > program_1_output_prod
    - name: Archive program_1_output_prod
      uses: actions/upload-artifact@v2
      with:
        name: program_1_output_prod
        path: ./program_1_output_prod      
    - name: Ensure Outputs Match
      run: |
        diff program_1_output_prod /home/runner/work/dummyc/dummyc/examples/program_1_output > diff
        [ -s diff ]
      
